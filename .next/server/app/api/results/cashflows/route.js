"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/results/cashflows/route";
exports.ids = ["app/api/results/cashflows/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresults%2Fcashflows%2Froute&page=%2Fapi%2Fresults%2Fcashflows%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresults%2Fcashflows%2Froute.js&appDir=C%3A%5CProjects%5Crenew-pyth%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Crenew-pyth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresults%2Fcashflows%2Froute&page=%2Fapi%2Fresults%2Fcashflows%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresults%2Fcashflows%2Froute.js&appDir=C%3A%5CProjects%5Crenew-pyth%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Crenew-pyth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Projects_renew_pyth_app_api_results_cashflows_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/results/cashflows/route.js */ \"(rsc)/./app/api/results/cashflows/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/results/cashflows/route\",\n        pathname: \"/api/results/cashflows\",\n        filename: \"route\",\n        bundlePath: \"app/api/results/cashflows/route\"\n    },\n    resolvedPagePath: \"C:\\\\Projects\\\\renew-pyth\\\\app\\\\api\\\\results\\\\cashflows\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Projects_renew_pyth_app_api_results_cashflows_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/results/cashflows/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyZXN1bHRzJTJGY2FzaGZsb3dzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZyZXN1bHRzJTJGY2FzaGZsb3dzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcmVzdWx0cyUyRmNhc2hmbG93cyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDUHJvamVjdHMlNUNyZW5ldy1weXRoJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDUHJvamVjdHMlNUNyZW5ldy1weXRoJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNnQjtBQUM3RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbmV3YWJsZWFzc2V0cy1uZXh0anMvPzNmOTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcUHJvamVjdHNcXFxccmVuZXctcHl0aFxcXFxhcHBcXFxcYXBpXFxcXHJlc3VsdHNcXFxcY2FzaGZsb3dzXFxcXHJvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9yZXN1bHRzL2Nhc2hmbG93cy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Jlc3VsdHMvY2FzaGZsb3dzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9yZXN1bHRzL2Nhc2hmbG93cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFByb2plY3RzXFxcXHJlbmV3LXB5dGhcXFxcYXBwXFxcXGFwaVxcXFxyZXN1bHRzXFxcXGNhc2hmbG93c1xcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvcmVzdWx0cy9jYXNoZmxvd3Mvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresults%2Fcashflows%2Froute&page=%2Fapi%2Fresults%2Fcashflows%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresults%2Fcashflows%2Froute.js&appDir=C%3A%5CProjects%5Crenew-pyth%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Crenew-pyth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/results/cashflows/route.js":
/*!********************************************!*\
  !*** ./app/api/results/cashflows/route.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/mongodb */ \"(rsc)/./lib/mongodb.js\");\n// app/api/results/cashflows/route.js\n\n\nasync function GET(request) {\n    try {\n        const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        const db = client.db(\"energy_contracts\");\n        // Get URL parameters\n        const { searchParams } = new URL(request.url);\n        const assetIds = searchParams.get(\"assets\")?.split(\",\").map((id)=>parseInt(id));\n        const startDate = searchParams.get(\"startDate\");\n        const endDate = searchParams.get(\"endDate\");\n        const limit = parseInt(searchParams.get(\"limit\")) || 1000;\n        const scenarioId = searchParams.get(\"scenarioId\") // For sensitivity analysis\n        ;\n        // Determine which collection to use\n        let collectionName = \"ASSET_cash_flows\";\n        if (scenarioId && scenarioId.startsWith(\"sensitivity_results\")) {\n            collectionName = \"SENS_Asset_Outputs\";\n        }\n        const collection = db.collection(collectionName);\n        // Build query\n        let query = {};\n        // Filter by scenario if provided\n        if (scenarioId) {\n            query.scenario_id = scenarioId;\n        }\n        // Filter by asset IDs if provided\n        if (assetIds && assetIds.length > 0) {\n            query.asset_id = {\n                $in: assetIds\n            };\n        }\n        // Filter by date range if provided\n        if (startDate || endDate) {\n            query.date = {};\n            if (startDate) {\n                query.date.$gte = new Date(startDate);\n            }\n            if (endDate) {\n                query.date.$lte = new Date(endDate);\n            }\n        }\n        console.log(`Querying collection: ${collectionName} with query:`, query);\n        // Get cash flow data with projection for performance\n        const cashFlows = await collection.find(query, {\n            projection: {\n                asset_id: 1,\n                date: 1,\n                revenue: 1,\n                contractedGreenRevenue: 1,\n                contractedEnergyRevenue: 1,\n                merchantGreenRevenue: 1,\n                merchantEnergyRevenue: 1,\n                opex: 1,\n                capex: 1,\n                equity_capex: 1,\n                debt_capex: 1,\n                equity_cash_flow: 1,\n                cfads: 1,\n                interest: 1,\n                principal: 1,\n                terminal_value: 1,\n                period_type: 1,\n                scenario_id: 1\n            }\n        }).sort({\n            date: 1,\n            asset_id: 1\n        }).limit(limit).toArray();\n        // Get summary statistics\n        const summaryPipeline = [\n            {\n                $match: query\n            },\n            {\n                $group: {\n                    _id: null,\n                    totalRecords: {\n                        $sum: 1\n                    },\n                    totalRevenue: {\n                        $sum: \"$revenue\"\n                    },\n                    totalOpex: {\n                        $sum: \"$opex\"\n                    },\n                    totalCapex: {\n                        $sum: \"$capex\"\n                    },\n                    totalEquityCashFlow: {\n                        $sum: \"$equity_cash_flow\"\n                    },\n                    totalCfads: {\n                        $sum: \"$cfads\"\n                    },\n                    minDate: {\n                        $min: \"$date\"\n                    },\n                    maxDate: {\n                        $max: \"$date\"\n                    },\n                    uniqueAssets: {\n                        $addToSet: \"$asset_id\"\n                    }\n                }\n            }\n        ];\n        const summaryResult = await collection.aggregate(summaryPipeline).toArray();\n        const summary = summaryResult[0] || {\n            totalRecords: 0,\n            totalRevenue: 0,\n            totalOpex: 0,\n            totalCapex: 0,\n            totalEquityCashFlow: 0,\n            totalCfads: 0,\n            minDate: null,\n            maxDate: null,\n            uniqueAssets: []\n        };\n        // Get monthly aggregated data for charts\n        const monthlyPipeline = [\n            {\n                $match: query\n            },\n            {\n                $group: {\n                    _id: {\n                        year: {\n                            $year: \"$date\"\n                        },\n                        month: {\n                            $month: \"$date\"\n                        },\n                        asset_id: \"$asset_id\"\n                    },\n                    revenue: {\n                        $sum: \"$revenue\"\n                    },\n                    opex: {\n                        $sum: \"$opex\"\n                    },\n                    capex: {\n                        $sum: \"$capex\"\n                    },\n                    equity_cash_flow: {\n                        $sum: \"$equity_cash_flow\"\n                    },\n                    cfads: {\n                        $sum: \"$cfads\"\n                    },\n                    contractedGreenRevenue: {\n                        $sum: \"$contractedGreenRevenue\"\n                    },\n                    contractedEnergyRevenue: {\n                        $sum: \"$contractedEnergyRevenue\"\n                    },\n                    merchantGreenRevenue: {\n                        $sum: \"$merchantGreenRevenue\"\n                    },\n                    merchantEnergyRevenue: {\n                        $sum: \"$merchantEnergyRevenue\"\n                    },\n                    date: {\n                        $first: \"$date\"\n                    }\n                }\n            },\n            {\n                $addFields: {\n                    monthYear: {\n                        $dateFromParts: {\n                            year: \"$_id.year\",\n                            month: \"$_id.month\",\n                            day: 1\n                        }\n                    },\n                    asset_id: \"$_id.asset_id\"\n                }\n            },\n            {\n                $sort: {\n                    monthYear: 1,\n                    asset_id: 1\n                }\n            }\n        ];\n        const monthlyData = await collection.aggregate(monthlyPipeline).toArray();\n        // Get asset breakdown\n        const assetBreakdownPipeline = [\n            {\n                $match: query\n            },\n            {\n                $group: {\n                    _id: \"$asset_id\",\n                    totalRevenue: {\n                        $sum: \"$revenue\"\n                    },\n                    totalOpex: {\n                        $sum: \"$opex\"\n                    },\n                    totalCapex: {\n                        $sum: \"$capex\"\n                    },\n                    totalEquityCashFlow: {\n                        $sum: \"$equity_cash_flow\"\n                    },\n                    totalCfads: {\n                        $sum: \"$cfads\"\n                    },\n                    recordCount: {\n                        $sum: 1\n                    },\n                    firstDate: {\n                        $min: \"$date\"\n                    },\n                    lastDate: {\n                        $max: \"$date\"\n                    }\n                }\n            },\n            {\n                $sort: {\n                    _id: 1\n                }\n            }\n        ];\n        const assetBreakdown = await collection.aggregate(assetBreakdownPipeline).toArray();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            data: cashFlows,\n            monthlyData: monthlyData,\n            assetBreakdown: assetBreakdown,\n            summary: {\n                ...summary,\n                uniqueAssetCount: summary.uniqueAssets.length\n            },\n            metadata: {\n                query: query,\n                collection: collectionName,\n                recordCount: cashFlows.length,\n                limit: limit,\n                hasMore: cashFlows.length === limit,\n                scenarioId: scenarioId\n            }\n        });\n    } catch (error) {\n        console.error(\"Cash flows API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch cash flows\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        const db = client.db(\"energy_contracts\");\n        const body = await request.json();\n        const { assets, dateRange, aggregationType, scenarioId } = body;\n        // Determine which collection to use\n        let collectionName = \"ASSET_cash_flows\";\n        if (scenarioId && scenarioId.startsWith(\"sensitivity_results\")) {\n            collectionName = \"SENS_Asset_Outputs\";\n        }\n        const collection = db.collection(collectionName);\n        // Build aggregation pipeline based on request\n        let pipeline = [];\n        // Match stage\n        let matchStage = {};\n        if (scenarioId) {\n            matchStage.scenario_id = scenarioId;\n        }\n        if (assets && assets.length > 0) {\n            matchStage.asset_id = {\n                $in: assets\n            };\n        }\n        if (dateRange && dateRange.start && dateRange.end) {\n            matchStage.date = {\n                $gte: new Date(dateRange.start),\n                $lte: new Date(dateRange.end)\n            };\n        }\n        if (Object.keys(matchStage).length > 0) {\n            pipeline.push({\n                $match: matchStage\n            });\n        }\n        // Group stage based on aggregation type\n        let groupStage = {\n            _id: null,\n            totalRevenue: {\n                $sum: \"$revenue\"\n            },\n            totalOpex: {\n                $sum: \"$opex\"\n            },\n            totalCapex: {\n                $sum: \"$capex\"\n            },\n            totalEquityCashFlow: {\n                $sum: \"$equity_cash_flow\"\n            },\n            totalCfads: {\n                $sum: \"$cfads\"\n            },\n            avgRevenue: {\n                $avg: \"$revenue\"\n            },\n            avgOpex: {\n                $avg: \"$opex\"\n            },\n            count: {\n                $sum: 1\n            }\n        };\n        if (aggregationType === \"monthly\") {\n            groupStage._id = {\n                year: {\n                    $year: \"$date\"\n                },\n                month: {\n                    $month: \"$date\"\n                }\n            };\n        } else if (aggregationType === \"quarterly\") {\n            groupStage._id = {\n                year: {\n                    $year: \"$date\"\n                },\n                quarter: {\n                    $ceil: {\n                        $divide: [\n                            {\n                                $month: \"$date\"\n                            },\n                            3\n                        ]\n                    }\n                }\n            };\n        } else if (aggregationType === \"yearly\") {\n            groupStage._id = {\n                $year: \"$date\"\n            };\n        } else if (aggregationType === \"by_asset\") {\n            groupStage._id = \"$asset_id\";\n        }\n        pipeline.push({\n            $group: groupStage\n        });\n        pipeline.push({\n            $sort: {\n                _id: 1\n            }\n        });\n        const result = await collection.aggregate(pipeline).toArray();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            data: result,\n            aggregationType: aggregationType,\n            recordCount: result.length,\n            collection: collectionName,\n            scenarioId: scenarioId\n        });\n    } catch (error) {\n        console.error(\"Cash flows aggregation error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to aggregate cash flows\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/results/cashflows/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// lib/mongodb.js\n\nconst uri = \"mongodb+srv://ProjectHalo:5apsFwxTlqN8WHQR@cluster0.quuwlhb.mongodb.net/energy_contracts?retryWrites=true&w=majority&appName=Cluster0\";\nconst options = {};\nlet client;\nlet clientPromise;\nif (false) {}\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    if (!global._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n// Export a module-scoped MongoClient promise. By doing this in a\n// separate module, the client can be shared across functions.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbW9uZ29kYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQkFBaUI7QUFDb0I7QUFFckMsTUFBTUMsTUFBTUMsdUlBQXVCO0FBQ25DLE1BQU1HLFVBQVUsQ0FBQztBQUVqQixJQUFJQztBQUNKLElBQUlDO0FBRUosSUFBSSxLQUF3QixFQUFFLEVBRTdCO0FBRUQsSUFBSUwsSUFBeUIsRUFBZTtJQUMxQywrREFBK0Q7SUFDL0QsNkVBQTZFO0lBQzdFLElBQUksQ0FBQ08sT0FBT0MsbUJBQW1CLEVBQUU7UUFDL0JKLFNBQVMsSUFBSU4sZ0RBQVdBLENBQUNDLEtBQUtJO1FBQzlCSSxPQUFPQyxtQkFBbUIsR0FBR0osT0FBT0ssT0FBTztJQUM3QztJQUNBSixnQkFBZ0JFLE9BQU9DLG1CQUFtQjtBQUM1QyxPQUFPLEVBSU47QUFFRCxpRUFBaUU7QUFDakUsOERBQThEO0FBQzlELGlFQUFlSCxhQUFhQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVuZXdhYmxlYXNzZXRzLW5leHRqcy8uL2xpYi9tb25nb2RiLmpzP2Q5MjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL21vbmdvZGIuanNcbmltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSAnbW9uZ29kYidcblxuY29uc3QgdXJpID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUklcbmNvbnN0IG9wdGlvbnMgPSB7fVxuXG5sZXQgY2xpZW50XG5sZXQgY2xpZW50UHJvbWlzZVxuXG5pZiAoIXByb2Nlc3MuZW52Lk1PTkdPREJfVVJJKSB7XG4gIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGFkZCB5b3VyIE1vbmdvIFVSSSB0byAuZW52LmxvY2FsJylcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gIC8vIEluIGRldmVsb3BtZW50IG1vZGUsIHVzZSBhIGdsb2JhbCB2YXJpYWJsZSBzbyB0aGF0IHRoZSB2YWx1ZVxuICAvLyBpcyBwcmVzZXJ2ZWQgYWNyb3NzIG1vZHVsZSByZWxvYWRzIGNhdXNlZCBieSBITVIgKEhvdCBNb2R1bGUgUmVwbGFjZW1lbnQpLlxuICBpZiAoIWdsb2JhbC5fbW9uZ29DbGllbnRQcm9taXNlKSB7XG4gICAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSwgb3B0aW9ucylcbiAgICBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KClcbiAgfVxuICBjbGllbnRQcm9taXNlID0gZ2xvYmFsLl9tb25nb0NsaWVudFByb21pc2Vcbn0gZWxzZSB7XG4gIC8vIEluIHByb2R1Y3Rpb24gbW9kZSwgaXQncyBiZXN0IHRvIG5vdCB1c2UgYSBnbG9iYWwgdmFyaWFibGUuXG4gIGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIG9wdGlvbnMpXG4gIGNsaWVudFByb21pc2UgPSBjbGllbnQuY29ubmVjdCgpXG59XG5cbi8vIEV4cG9ydCBhIG1vZHVsZS1zY29wZWQgTW9uZ29DbGllbnQgcHJvbWlzZS4gQnkgZG9pbmcgdGhpcyBpbiBhXG4vLyBzZXBhcmF0ZSBtb2R1bGUsIHRoZSBjbGllbnQgY2FuIGJlIHNoYXJlZCBhY3Jvc3MgZnVuY3Rpb25zLlxuZXhwb3J0IGRlZmF1bHQgY2xpZW50UHJvbWlzZSJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsInVyaSIsInByb2Nlc3MiLCJlbnYiLCJNT05HT0RCX1VSSSIsIm9wdGlvbnMiLCJjbGllbnQiLCJjbGllbnRQcm9taXNlIiwiRXJyb3IiLCJnbG9iYWwiLCJfbW9uZ29DbGllbnRQcm9taXNlIiwiY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/mongodb.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fresults%2Fcashflows%2Froute&page=%2Fapi%2Fresults%2Fcashflows%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fresults%2Fcashflows%2Froute.js&appDir=C%3A%5CProjects%5Crenew-pyth%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Crenew-pyth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();